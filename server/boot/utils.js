const env = require('../../env.json');
exports.getBodyString = (appname) => {
  let request = `<?xml version=\'1.1\' encoding=\'UTF-8\'?>\r\n<flow-definition plugin="workflow-job@2.32">\r\n  <actions>\r\n    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.7"/>\r\n    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.7">\r\n      <jobProperties/>\r\n      <triggers/>\r\n      <parameters/>\r\n      <options/>\r\n    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>\r\n  </actions>\r\n  <description></description>\r\n  <displayName>${appname}</displayName>\r\n  <keepDependencies>false</keepDependencies>\r\n  <properties>\r\n    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>\r\n      <triggers>\r\n        <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.29.4">\r\n          <spec></spec>\r\n        </com.cloudbees.jenkins.GitHubPushTrigger>\r\n      </triggers>\r\n    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>\r\n    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.4">\r\n      <projectUrl>https://github.com/${env.github_user}/${env.github_repo_prefix}-${appname}/</projectUrl>\r\n      <displayName>${appname}</displayName>\r\n    </com.coravy.hudson.plugins.github.GithubProjectProperty>\r\n  </properties>\r\n  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.65">\r\n    <script>pipeline {\r\n  environment {\r\n    registry = &quot;200.121.128.26:443/carlos.ramirezv/${appname}&quot;\r\n    registryCredential = &apos;registrydocker&apos;\r\n  }\r\n  agent any\r\n  stages {\r\n    stage(&apos;Cloning Git&apos;) {\r\n      steps {\r\n        git &apos;https://github.com/${env.github_user}/${env.github_repo_prefix}-${appname}.git&apos;\r\n      }\r\n    }\r\n    stage(&apos;Building image&apos;) {\r\n      steps{\r\n        script {\r\n          dockerImage = docker.build registry + &quot;:latest&quot;\r\n        }\r\n      }\r\n    }\r\n    stage(&apos;Deploy Image&apos;) {\r\n      steps{\r\n        script {\r\n          docker.withRegistry(&apos;https://200.121.128.26:443&apos;, registryCredential ) {\r\n            dockerImage.push(&quot;$BUILD_NUMBER&quot;)\r\n            dockerImage.push()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}</script>\r\n    <sandbox>false</sandbox>\r\n  </definition>\r\n  <triggers/>\r\n  <disabled>false</disabled>\r\n</flow-definition>`;
  return request;
}